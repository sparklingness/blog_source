{"version":3,"sources":["webpack:///./src/templates/post.jsx"],"names":["Hero","props","theme","colors","greyLight","Headline","grey","PostWrapper","Wrapper","withComponent","Post","data","prismicPost","posts","location","categories","category","map","c","document","name","customSEO","title","text","website","titleAlt","pathname","desc","description","node","article","date","id","skipNavId","allSlices","body","style","marginTop","nodes","pageQuery"],"mappings":"6OAQMA,EAAI,gEACY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,YADxC,0CAMJC,EAAQ,2NAGH,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,OAHzB,+DAWRC,EAAcC,IAAQC,cAAc,OAAtB,sBAmCLC,UAjCF,SAAC,GAAgD,IAAD,IAA7CC,KAAQC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SACpCH,EAASC,EAATD,KACJI,GAAa,EAIjB,OAHIJ,EAAKI,WAAW,GAAGC,WACrBD,EAAaJ,EAAKI,WAAWE,KAAI,SAAAC,GAAC,OAAIA,EAAEF,SAASG,SAAS,GAAGR,KAAKS,SAGlE,YAAC,IAAD,CAAQC,WAAS,GACf,YAAC,IAAD,CACEC,MAAUX,EAAKW,MAAMC,KAAhB,MAA0BC,IAAQC,SACvCC,SAAUZ,EAASY,SACnBC,KAAMhB,EAAKiB,YACXC,KAAMjB,EACNkB,SAAO,IAET,YAAC9B,EAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,MACA,YAACK,EAAD,KACGM,EAAKoB,KADR,MACiBhB,GAAc,YAAC,IAAD,CAAYA,WAAYA,KAEvD,sBAAKJ,EAAKW,MAAMC,QAGpB,YAAChB,EAAD,CAAayB,GAAIR,IAAQS,WACvB,YAAC,IAAD,CAAWC,UAAWvB,EAAKwB,OAC3B,YAAC,IAAD,CAAOC,MAAO,CAAEC,UAAW,SAA3B,gBACA,YAAC,IAAD,CAASxB,MAAOA,EAAMyB,WAqBvB,IAAMC,EAAS","file":"component---src-templates-post-jsx-09c3a53c0c61a893e0c2.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\nimport styled from '@emotion/styled'\r\nimport { Layout, Listing, Wrapper, SliceZone, Title, SEO, Header } from '../components'\r\nimport Categories from '../components/Listing/Categories'\r\nimport website from '../../config/website'\r\n\r\nconst Hero = styled.header`\r\n  background-color: ${props => props.theme.colors.greyLight};\r\n  padding-top: 1rem;\r\n  padding-bottom: 4rem;\r\n`\r\n\r\nconst Headline = styled.p`\r\n  font-family: 'Source Sans Pro', -apple-system, 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica', 'Arial',\r\n    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\r\n  color: ${props => props.theme.colors.grey};\r\n  font-size: 1.25rem;\r\n  a {\r\n    font-style: normal;\r\n    font-weight: normal;\r\n  }\r\n`\r\n\r\nconst PostWrapper = Wrapper.withComponent('main')\r\n\r\nconst Post = ({ data: { prismicPost, posts }, location }) => {\r\n  const { data } = prismicPost\r\n  let categories = false\r\n  if (data.categories[0].category) {\r\n    categories = data.categories.map(c => c.category.document[0].data.name)\r\n  }\r\n  return (\r\n    <Layout customSEO>\r\n      <SEO\r\n        title={`${data.title.text} | ${website.titleAlt}`}\r\n        pathname={location.pathname}\r\n        desc={data.description}\r\n        node={prismicPost}\r\n        article\r\n      />\r\n      <Hero>\r\n        <Wrapper>\r\n          <Header />\r\n          <Headline>\r\n            {data.date} â€” {categories && <Categories categories={categories} />}\r\n          </Headline>\r\n          <h1>{data.title.text}</h1>\r\n        </Wrapper>\r\n      </Hero>\r\n      <PostWrapper id={website.skipNavId}>\r\n        <SliceZone allSlices={data.body} />\r\n        <Title style={{ marginTop: '4rem' }}>Recent posts</Title>\r\n        <Listing posts={posts.nodes} />\r\n      </PostWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Post\r\n\r\nPost.propTypes = {\r\n  data: PropTypes.shape({\r\n    prismicPost: PropTypes.object.isRequired,\r\n    posts: PropTypes.shape({\r\n      nodes: PropTypes.array.isRequired,\r\n    }),\r\n  }).isRequired,\r\n  location: PropTypes.object.isRequired,\r\n}\r\n\r\n// The typenames come from the slice names\r\n// If this doesn't work for you query for __typename in body {} and GraphiQL will show them to you\r\n\r\nexport const pageQuery = graphql`\r\n  query PostBySlug($uid: String!) {\r\n    prismicPost(uid: { eq: $uid }) {\r\n      uid\r\n      first_publication_date\r\n      last_publication_date\r\n      data {\r\n        title {\r\n          text\r\n        }\r\n        description\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        categories {\r\n          category {\r\n            document {\r\n              data {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        }\r\n        body {\r\n          ... on PrismicPostBodyText {\r\n            slice_type\r\n            id\r\n            primary {\r\n              text {\r\n                html\r\n              }\r\n            }\r\n          }\r\n          ... on PrismicPostBodyCodeBlock {\r\n            slice_type\r\n            id\r\n            primary {\r\n              code_block {\r\n                html\r\n              }\r\n            }\r\n          }\r\n          ... on PrismicPostBodyQuote {\r\n            slice_type\r\n            id\r\n            primary {\r\n              quote {\r\n                html\r\n                text\r\n              }\r\n            }\r\n          }\r\n          ... on PrismicPostBodyImage {\r\n            slice_type\r\n            id\r\n            primary {\r\n              image {\r\n                localFile {\r\n                  childImageSharp {\r\n                    fluid(maxWidth: 1200, quality: 90) {\r\n                      ...GatsbyImageSharpFluid_withWebp\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    posts: allPrismicPost(limit: 2, sort: { fields: [data___date], order: DESC }, filter: { uid: { ne: $uid } }) {\r\n      nodes {\r\n        uid\r\n        data {\r\n          title {\r\n            text\r\n          }\r\n          date(formatString: \"DD.MM.YYYY\")\r\n          categories {\r\n            category {\r\n              document {\r\n                data {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}