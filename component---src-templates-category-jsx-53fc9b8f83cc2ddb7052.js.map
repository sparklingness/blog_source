{"version":3,"sources":["webpack:///./src/templates/category.jsx"],"names":["Hero","props","theme","colors","primary","bg","Headline","greyBlue","CatWrapper","Wrapper","withComponent","Category","category","pageContext","data","posts","nodes","totalCount","location","title","website","titleAlt","pathname","invert","id","skipNavId","style","marginTop","pageQuery"],"mappings":"qNAOMA,EAAI,+DACY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,UADxC,mDAKG,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,KAL/B,MASJC,EAAQ,0NAGH,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAOI,WAHzB,+DAWRC,EAAaC,IAAQC,cAAc,OAAtB,qBA2BJC,UAzBE,SAAC,GAAD,IACAC,EADA,EACfC,YAAeD,SADA,IAEfE,KACEC,MAASC,EAHI,EAGJA,MAAOC,EAHH,EAGGA,WAElBC,EALe,EAKfA,SALe,OAOf,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAK,aAAeP,EAAf,MAA6BQ,IAAQC,SAAYC,SAAUJ,EAASI,WAC9E,YAACtB,EAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQuB,QAAM,IACd,YAACjB,EAAD,iBACA,sBAAKM,KAGT,YAACJ,EAAD,CAAYgB,GAAIJ,IAAQK,WACtB,YAAC,IAAD,CAAOC,MAAO,CAAEC,UAAW,SACxBV,EADH,IAC+B,IAAfA,EAAmB,OAAS,QAD5C,IACqE,IAAfA,EAAmB,MAAQ,OADjF,iBACuGL,EADvG,KAGA,YAAC,IAAD,CAASG,MAAOC,OAoBf,IAAMY,EAAS","file":"component---src-templates-category-jsx-53fc9b8f83cc2ddb7052.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\nimport styled from '@emotion/styled'\r\nimport { Layout, Listing, Wrapper, Title, SEO, Header } from '../components'\r\nimport website from '../../config/website'\r\n\r\nconst Hero = styled.header`\r\n  background-color: ${props => props.theme.colors.primary};\r\n  padding-top: 1rem;\r\n  padding-bottom: 4rem;\r\n  h1 {\r\n    color: ${props => props.theme.colors.bg};\r\n  }\r\n`\r\n\r\nconst Headline = styled.p`\r\n  font-family: 'Source Sans Pro', -apple-system, 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica', 'Arial',\r\n    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\r\n  color: ${props => props.theme.colors.greyBlue};\r\n  font-size: 1.25rem;\r\n  a {\r\n    font-style: normal;\r\n    font-weight: normal;\r\n  }\r\n`\r\n\r\nconst CatWrapper = Wrapper.withComponent('main')\r\n\r\nconst Category = ({\r\n  pageContext: { category },\r\n  data: {\r\n    posts: { nodes, totalCount },\r\n  },\r\n  location,\r\n}) => (\r\n  <Layout>\r\n    <SEO title={`Category: ${category} | ${website.titleAlt}`} pathname={location.pathname} />\r\n    <Hero>\r\n      <Wrapper>\r\n        <Header invert />\r\n        <Headline>Category</Headline>\r\n        <h1>{category}</h1>\r\n      </Wrapper>\r\n    </Hero>\r\n    <CatWrapper id={website.skipNavId}>\r\n      <Title style={{ marginTop: '4rem' }}>\r\n        {totalCount} {totalCount === 1 ? 'Post' : 'Posts'} {totalCount === 1 ? 'was' : 'were'} tagged with \"{category}\"\r\n      </Title>\r\n      <Listing posts={nodes} />\r\n    </CatWrapper>\r\n  </Layout>\r\n)\r\n\r\nexport default Category\r\n\r\nCategory.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    category: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  data: PropTypes.shape({\r\n    posts: PropTypes.shape({\r\n      nodes: PropTypes.array.isRequired,\r\n      totalCount: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  location: PropTypes.object.isRequired,\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query CategoryPage($category: String!) {\r\n    posts: allPrismicPost(\r\n      sort: { fields: [data___date], order: DESC }\r\n      filter: {\r\n        data: {\r\n          categories: { elemMatch: { category: { document: { elemMatch: { data: { name: { eq: $category } } } } } } }\r\n        }\r\n      }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        uid\r\n        data {\r\n          title {\r\n            text\r\n          }\r\n          date(formatString: \"DD.MM.YYYY\")\r\n          categories {\r\n            category {\r\n              document {\r\n                data {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}